<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd">

        <!-- 扫描类包，将标注Spring注解的类自动转化为Bean，同时完成Bean的注入  -->
        <context:component-scan base-package="com.book.dao"/>
    <context:component-scan base-package="com.book.service"/>

    <!--  定义一个使用DBCP实现的数据源
    假设网站一天有很大的访问量，数据库服务器就需要为每次连接创建一次数据库连接，
    极大的浪费数据库的资源，并且极易造成数据库服务器内存溢出、拓机。
    数据库连接是一种关键的有限的昂贵的资源,
    这一点在多用户的网页应用程序中体现的尤为突出.
    对数据库连接的管理能显著影响到整个应用程序的伸缩性和健壮性,影响到程序的性能指标.
    数据库连接池正式针对这个问题提出来的.数据库连接池负责分配,管理和释放数据库连接,
    它允许应用程序重复使用一个现有的数据库连接,而不是重新建立一个。
    数据库连接池在初始化时将创建一定数量的数据库连接放到连接池中,
    这些数据库连接的数量是由最小数据库连接数来设定的.
    无论这些数据库连接是否被使用,连接池都将一直保证至少拥有这么多的连接数量.
    连接池的最大数据库连接数量限定了这个连接池能占有的最大连接数,
    当应用程序向连接池请求的连接数超过最大连接数量时,这些请求将被加入到等待队列中.
    -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close"
          p:driverClassName="com.mysql.jdbc.Driver"
          p:url="jdbc:mysql://localhost:3306/BOOK_MASTER?characterSetResults=UTF-8&amp;characterEncoding=UTF-8"
            p:username="root"
          p:password="123456"/>

    <!-- 定义JDBC模板Bean   -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource"/>

</beans>
